---
import { getI18N } from '../i18n/index.ts'
// import Logo from './icons/logo.astro'
const { currentLocale } = Astro
const t = getI18N({ currentLocale })
---

<section id="hero" class="pt-16 bg-primary bg-grid">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="bgheroimage py-20 lg:py-32">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <!-- Content -->
        <div class="text-center lg:text-left">
          <h1 class="text-4xl sm:text-5xl font-bold text-text-primary leading-tight">
            {t.hero.title}
            <span class="herotitle_span">{t.hero.title_gradient}</span>
          </h1>
          <p class="mt-6 text-xl text-text-secondary">
            {t.hero.subtitle}
          </p>

          <!-- CTAs -->
          <div class="mt-10 flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
            <div class={'button_backdrop absolute bg-accent rounded left-[var(--left)] top-[var(--top)] w-[var(--width)] h-[var(--height)] transition-all duration-300 ease-in-out'}></div>
            <a href="#contact" class="text-text-primary button_transparent font-semibold z-10">
              {t.hero.cta1}
            </a>
            <a href="#portfolio" class="text-text-primary button_transparent font-semibold z-10">
              {t.hero.cta2}
            </a>
          </div>
        </div>

        <!-- Visual -->
        <div class="relative">
          <!-- <img src="/img6.png" alt="Hero Image" class="w-full h-auto rounded-2xl shadow-lg" /> -->
           <!-- <video src="./video_1.mp4" autoplay loop muted class="w-full h-auto rounded-2xl shadow-lg"></video> -->
        </div>
      </div>
    </div>
  </div>
</section>
<!-- <div class="flex justify-center bg-primary pt-section">
  <Logo class="w-16 h-16 contrast-50" />
</div> -->
<style>
  .herotitle_span {
    background: -webkit-linear-gradient(#eee, #0d9488);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .bgheroimage {
    /* background-image: linear-gradient(90deg, var(--color-base) 0%, rgba(237, 221, 83, 0) 100%), linear-gradient(270deg, var(--color-base) 0%, rgb(255 255 255 / 0%) 42%), url('/img7-light.png'); */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
  html.dark .bgheroimage {
    background-image: linear-gradient(90deg, var(--color-base) 0%, rgba(237, 221, 83, 0) 100%), linear-gradient(270deg, var(--color-base) 0%, rgb(255 255 255 / 0%) 42%), url('/img7.jpg');
  }
  .active {
    color: white !important;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const buttons = document.querySelectorAll('.button_transparent')
  const backdrop = document.querySelector('.button_backdrop') as HTMLElement
  const { left, top, width, height } = buttons[0].getBoundingClientRect()
  backdrop.style.setProperty('--left', `${left}px`)
  backdrop.style.setProperty('--top', `${top}px`)
  backdrop.style.setProperty('--width', `${width}px`)
  backdrop.style.setProperty('--height', `${height}px`)
  buttons[0].classList.add('active')
  buttons.forEach(button => {
    button.addEventListener('mouseenter', () => {
      const { left, top, width, height } = button.getBoundingClientRect()
      backdrop.style.setProperty('--left', `${left}px`)
      backdrop.style.setProperty('--top', `${top}px`)
      backdrop.style.setProperty('--width', `${width}px`)
      backdrop.style.setProperty('--height', `${height}px`)
      buttons.forEach(btn => {
        if (btn !== button) btn.classList.remove('active')
      })
      button.classList.add('active')
    })
  })
  window.addEventListener('resize', () => {
    const buttons = document.querySelectorAll('.button_transparent')
    const backdrop = document.querySelector('.button_backdrop') as HTMLElement
    if (buttons.length && backdrop) {
    // Puedes elegir el botón activo, aquí usamos el primero como referencia
      const { left, top, width, height } = buttons[0].getBoundingClientRect()
      backdrop.style.setProperty('--left', `${left}px`)
      backdrop.style.setProperty('--top', `${top}px`)
      backdrop.style.setProperty('--width', `${width}px`)
      backdrop.style.setProperty('--height', `${height}px`)
      buttons[0].classList.add('active')
    }
  })
})
</script>
